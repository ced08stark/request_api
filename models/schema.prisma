// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




model Admin{
    id Int @id @default(autoincrement())
    username String
    email String @unique
    password String
    image String?
    createdAt DateTime? @default(now())
    updateAt DateTime? @updatedAt
}

model User{
    id Int @id @default(autoincrement())
    username String
    email String @unique
    password String
    phone String
    image String
    role String
    equipementMateriels EquipementMateriel[]
    equipementLogiciels EquipementLogiciel[]
    interventionMateriels InterventionMateriel[]
    interventionLogiciels InterventionLogiciel[]
    createdAt DateTime? @default(now())
    updateAt DateTime? @updatedAt
}




model Materiel{
    id Int @id @default(autoincrement())
    nom String
    marque String
    image String
    quantite Int
    equipements EquipementMateriel[]
    createdAt DateTime? @default(now())
    updateAt DateTime? @updatedAt
}

model Logiciel{
    id Int @id @default(autoincrement())
    nom String
    version String
    image String
    licence Int
    equipements EquipementLogiciel[]
    createdAt DateTime? @default(now())
    updateAt DateTime? @updatedAt
}


model EquipementLogiciel{
    id Int @id @default(autoincrement())
    logiciel Logiciel @relation(fields: [logicielId], references: [id])
    logicielId Int 
    user User @relation(fields: [userId], references: [id])
    userId Int 
    status Boolean
    interventionLogiciel InterventionLogiciel[]
    createdAt DateTime? @default(now())
    updateAt DateTime? @updatedAt
}

model EquipementMateriel{
    id Int @id @default(autoincrement())
    materiel Materiel @relation(fields: [materielId], references: [id])
    materielId Int 
    user User @relation(fields: [userId], references: [id])
    userId Int
    status Boolean
    interventionMateriel InterventionMateriel[]
    createdAt DateTime? @default(now())
    updateAt DateTime? @updatedAt
}



model RapportMateriel{
    id Int @id @default(autoincrement())
    title String
    description String
    interventionMateriel InterventionMateriel @relation(fields: [interventionId], references: [id])
    interventionId Int
    createdAt DateTime? @default(now())
    updateAt DateTime? @updatedAt
}

model RapportLogiciel{
    id Int @id @default(autoincrement())
    title String
    description String
    interventionLogiciel InterventionLogiciel @relation(fields: [interventionId], references: [id])
    interventionId Int
    createdAt DateTime? @default(now())
    updateAt DateTime? @updatedAt
}

model InterventionMateriel{
    id Int @id @default(autoincrement())
    description String
    typeDiagnostique String
    isAssign Boolean @default(false)
    isFrequency Boolean @default(false)
    user User @relation(fields: [userId], references: [id])
    userId Int 
    equipementMateriel EquipementMateriel @relation(fields: [equipementMaterielId], references: [id])
    equipementMaterielId Int 
    rapportMateriel RapportMateriel[]
    createdAt DateTime? @default(now())
    updateAt DateTime? @updatedAt
}

model InterventionLogiciel{
    id Int @id @default(autoincrement())
    description String
    typeDiagnostique String
    isAssign Boolean @default(false)
    isBegin Boolean @default(false)
    user User @relation(fields: [userId], references: [id])
    userId Int 
    equipementLogiciel EquipementLogiciel @relation(fields: [equipementLogicielId], references: [id])
    equipementLogicielId Int 
    rapportLogiciel RapportLogiciel[]
    createdAt DateTime? @default(now())
    updateAt DateTime? @updatedAt
}





